# .github/workflows/deploy.yml
# Optimized workflow for Nova's portfolio deployment to GitHub Pages

name: 🚀 Deploy Nova's Portfolio to Pages

on:
  push:
    branches: [ main ]  # Deploy on every push to main
    tags:
      - "v*"           # Also deploy on version tags
  pull_request:
    branches: [ main ]  # Build PRs to test
  workflow_dispatch:    # Allow manual deployment

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    name: 🏗️ Build Portfolio
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔍 Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi
          
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          
      - name: 📄 Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          static_site_generator: next
          
      - name: 💾 Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
            
      - name: 📦 Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        
      - name: 🔧 Create .nojekyll file
        run: touch ./public/.nojekyll
        
      - name: 🏗️ Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        env:
          # Add any environment variables here if needed
          NODE_ENV: production
          
      - name: 🔍 Verify build output
        run: |
          echo "📁 Build output contents:"
          ls -la ./out/
          echo "📊 Build size:"
          du -sh ./out/
          
      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job (only runs on main branch pushes and tags)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    name: 🚀 Deploy to GitHub Pages
    # Only deploy on main branch pushes or tags, not on PRs
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: 📋 Deployment Summary
        run: |
          echo "🎉 Nova's portfolio deployed successfully!"
          echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"
          echo "⏰ Deployed at: $(date)"
          echo "📝 Commit: ${{ github.sha }}"